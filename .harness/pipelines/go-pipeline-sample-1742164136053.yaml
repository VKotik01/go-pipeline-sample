pipeline:
  identifier: Build_go_pipeline_sample_1742164137641
  name: Build go-pipeline-sample
  orgIdentifier: default
  projectIdentifier: default_project
  properties:
    ci:
      codebase:
        build: <+input>
        connectorRef: VKotik
        repoName: go-pipeline-sample
  stages:
    - stage:
        identifier: build
        name: build
        spec:
          caching:
            enabled: true
          cloneCodebase: true
          execution:
            steps:
              - step:
                  identifier: gotestcoverage
                  name: go_test_coverage
                  spec:
                    connectorRef: <+input>
                    image: golang:1.15
                    shell: Sh
                    command: |-
                      set +e
                      go get gotest.tools/gotestsum
                      gotestsum --format=standard-verbose --junitfile unit-tests.xml
                      exit 0
                    reports:
                      type: JUnit
                      spec:
                        paths:
                          - "*.xml"
                  timeout: ""
                  type: Run
              - step:
                  identifier: gobuild
                  name: go_build
                  spec:
                    connectorRef: <+input>
                    image: golang:1.15
                    shell: Sh
                    command: |-
                      set +e
                      go get gotest.tools/gotestsum
                      CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -a -tags netgo
                      exit 0
                  timeout: ""
                  type: Run
              - step:
                  identifier: gotestreport
                  name: go_test_report
                  spec:
                    command: "export GOBIN=/home/harness/go/bin\n\t\texport PATH=/home/harness/go/bin:$PATH\n\t\techo $PATH\n\t\tgo install github.com/jstemmer/go-junit-report/v2@latest\n\t\tgo test -v 2>&1 ./... | go-junit-report -set-exit-code > report.xml"
                    reports:
                      spec:
                        paths:
                          - /harness/report.xml
                      type: JUnit
                  timeout: ""
                  type: Run
          platform:
            os: Linux
            arch: Amd64
          runtime:
            type: Cloud
            spec: {}
        type: CI
